---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Header from "../components/Header.astro";
import ReadingProgress from "../components/ReadingProgress.astro";

type Props = CollectionEntry<"blog">["data"] & {
	selectedItem?: string;
};

const {
	title,
	description,
	pubDate,
	updatedDate,
	heroImage,
	tags,
	selectedItem = "blog",
} = Astro.props;
---

<html lang="cn">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			/* Blog Post Layout */
			.back-nav-container {
				color: var(--text-primary);
				letter-spacing: 2px;
				text-transform: uppercase;
				align-items: center;
				padding-bottom: 0;
				font-weight: 500;
				display: flex;
				margin-bottom: 2rem;
			}

			.back-nav-button {
				color: var(--text-primary);
				background-color: rgba(0, 0, 0, 0);
				border-radius: var(--border-radius);
				margin-top: -12px;
				padding: 12px 16px;
				text-decoration: none;
				transition: all var(--transition-fast);
				display: flex;
				align-items: center;
				gap: 8px;
			}

			.back-nav-button:hover {
				backdrop-filter: blur(4px);
				background-color: rgba(8, 8, 8, 0.24);
			}

			.back-nav-img {
				width: 18px;
			}

			.article-container {
				max-width: 800px;
			}

			.hero-image {
				width: 100%;
				height: 400px;
				object-fit: cover;
				border-radius: var(--border-radius-lg);
				margin-bottom: 2rem;
			}

			.article-header {
				margin-bottom: 3rem;
			}

			.article-title {
				font-size: 2rem;
				font-weight: 600;
				color: var(--text-primary);
				margin-bottom: 1rem;
				line-height: 1.3;
			}

			.article-meta {
				display: flex;
				align-items: center;
				gap: 1rem;
				margin-bottom: 2rem;
			}

			.article-date {
				color: var(--text-secondary);
				font-family: "IBM Plex Mono", sans-serif;
				font-size: 12px;
				text-transform: uppercase;
				letter-spacing: 0.5px;
			}

			.article-tags {
				display: flex;
				flex-wrap: wrap;
				gap: 0.5rem;
			}

			.article-tag {
				background-color: var(--chip-bg);
				color: var(--chip-text);
				padding: 4px 8px;
				border-radius: var(--border-radius);
				font-family: "IBM Plex Mono", sans-serif;
				font-size: 10px;
				text-transform: uppercase;
			}

			.article-divider {
				width: 100%;
				height: 1px;
				background: var(--border-primary);
				margin: 2rem 0;
			}

			/* Prose Styles */
			.prose {
				color: var(--text-primary);
				line-height: 1.7;
				font-size: 16px;
			}

			.prose h1,
			.prose h2,
			.prose h3,
			.prose h4,
			.prose h5,
			.prose h6 {
				color: var(--text-primary);
				margin-top: 2.5rem;
				margin-bottom: 1rem;
				font-weight: 600;
				line-height: 1.4;
			}

			.prose h1 {
				font-size: 1.75rem;
			}

			.prose h2 {
				font-size: 1.5rem;
				border-bottom: 1px solid var(--border-primary);
				padding-bottom: 0.5rem;
				margin-top: 3rem;
			}

			.prose h3 {
				font-size: 1.25rem;
				margin-top: 2rem;
			}

			.prose h4 {
				font-size: 1.125rem;
				font-weight: 500;
			}

			.prose h5,
			.prose h6 {
				font-size: 1rem;
				font-weight: 500;
				color: var(--text-secondary);
			}

			.prose p {
				margin-bottom: 1.5rem;
				color: var(--text-secondary);
			}

			.prose a {
				color: var(--accent);
				text-decoration: none;
				border-bottom: 1px solid transparent;
				transition: all var(--transition-fast);
			}

			.prose a:hover {
				border-bottom-color: var(--accent);
			}

			.prose code {
				background-color: var(--bg-tertiary);
				color: var(--accent);
				padding: 0.2rem 0.4rem;
				border-radius: var(--border-radius);
				font-family: "IBM Plex Mono", monospace;
				font-size: 0.9em;
			}

			.prose pre {
				background-color: var(--bg-tertiary);
				border: 1px solid var(--border-primary);
				border-radius: var(--border-radius-lg);
				padding: 1.5rem;
				overflow-x: auto;
				margin: 1.5rem 0;
			}

			.prose pre code {
				background: none;
				padding: 0;
				color: var(--text-primary);
			}

			.prose blockquote {
				border-left: 4px solid var(--accent);
				background-color: var(--bg-tertiary);
				padding: 1rem 1.5rem;
				margin: 1.5rem 0;
				border-radius: 0 var(--border-radius) var(--border-radius) 0;
			}

			.prose blockquote p {
				margin: 0;
				color: var(--text-primary);
				font-style: italic;
			}

			.prose ul,
			.prose ol {
				margin-bottom: 1.5rem;
				padding-left: 2rem;
			}

			.prose li {
				margin-bottom: 0.5rem;
				color: var(--text-secondary);
			}

			.prose img {
				width: 100%;
				height: auto;
				border-radius: var(--border-radius);
				margin: 1.5rem 0;
			}

			.prose hr {
				border: none;
				height: 1px;
				background: var(--border-primary);
				margin: 2rem 0;
			}

			.prose table {
				width: 100%;
				border-collapse: collapse;
				margin: 1.5rem 0;
				background-color: var(--bg-tertiary);
				border-radius: var(--border-radius);
				overflow: hidden;
			}

			.prose th,
			.prose td {
				padding: 0.75rem 1rem;
				text-align: left;
				border-bottom: 1px solid var(--border-primary);
			}

			.prose th {
				background-color: var(--bg-card);
				font-weight: 600;
				color: var(--text-primary);
			}

			.prose td {
				color: var(--text-secondary);
			}

			@media (max-width: 768px) {
				.article-title {
					font-size: 1.75rem;
				}

				.hero-image {
					height: 250px;
				}

				.prose {
					font-size: 15px;
				}

				.prose h1 {
					font-size: 1.5rem;
				}

				.prose h2 {
					font-size: 1.25rem;
				}

				.prose h3 {
					font-size: 1.125rem;
				}
			}
		</style>
	</head>

	<body>
		<div class="content">
			<ReadingProgress />
			<Header selectedItem={selectedItem} />
			<nav class="main">
				<div class="container">
					<div class="back-nav-container">
						<a href="/blog" class="back-nav-button">
							<svg class="back-nav-img" fill="currentColor" viewBox="0 0 24 24">
								<path
									d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
								></path>
							</svg>
							<div>Back to Blog</div>
						</a>
					</div>
					<article class="article-container">
						{
							heroImage && (
								<Image
									class="hero-image"
									width={1020}
									height={510}
									src={heroImage}
									format="webp"
									quality={95}
									alt=""
								/>
							)
						}
						<div class="article-header">
							<h1 class="article-title">{title}</h1>
							<div class="article-meta">
								<div class="article-date">
									<FormattedDate date={pubDate} />
									{
										updatedDate && (
											<span>
												{" "}
												â€¢ Updated <FormattedDate date={updatedDate} />
											</span>
										)
									}
								</div>
							</div>
							{
								tags && tags.length > 0 && (
									<div class="article-tags">
										{tags.map((tag) => (
											<div class="article-tag">{tag}</div>
										))}
									</div>
								)
							}
							<div class="article-divider"></div>
						</div>
						<div class="prose">
							<slot />
						</div>
					</article>
				</div>
			</nav>
		</div>
	</body>
</html>
