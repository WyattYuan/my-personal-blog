---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import Header from "../../components/Header.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../../consts";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<!doctype html>
<html lang="cn">
  <head>
    <BaseHead
      title={`博客文章 | ${SITE_TITLE}`}
      description={SITE_DESCRIPTION}
    />
    <style>
      /* Blog List Specific Styles */
      .back-nav-container {
        color: var(--text-primary);
        letter-spacing: 2px;
        text-transform: uppercase;
        align-items: center;
        padding-bottom: 0;
        font-weight: 500;
        display: flex;
        margin-bottom: 2rem;
      }

      .back-nav-button {
        color: var(--text-primary);
        background: var(--glass-bg);
        backdrop-filter: blur(10px);
        border: 1px solid var(--glass-border);
        border-radius: var(--border-radius-lg);
        margin-top: -12px;
        padding: 12px 16px;
        text-decoration: none;
        transition: all var(--transition-smooth);
        display: flex;
        align-items: center;
        gap: 8px;
        box-shadow: var(--shadow-sm);
      }

      .back-nav-button:hover {
        background: var(--accent-light);
        border-color: var(--accent);
        transform: translateX(-4px);
        box-shadow: 0 4px 16px rgba(63, 193, 201, 0.2);
      }

      .back-nav-img {
        width: 18px;
      }

      .content-container {
        grid-column-gap: 32px;
        grid-row-gap: 32px;
        flex-direction: column;
        display: flex;
      }

      .items-container {
        flex-direction: column;
      }

      .resource-items {
        grid-column-gap: 64px;
        grid-row-gap: 64px;
        flex-direction: column;
        display: flex;
      }

      .single-item {
        font-size: 16px;
        background: var(--glass-bg);
        backdrop-filter: blur(var(--blur-amount)) saturate(var(--blur-saturate));
        -webkit-backdrop-filter: blur(var(--blur-amount))
          saturate(var(--blur-saturate));
        border-radius: var(--border-radius-xl);
        padding: 2rem;
        border: 1px solid var(--glass-border);
        transition: all var(--transition-smooth);
        box-shadow: var(--shadow-md);
        position: relative;
        overflow: hidden;
        animation: slideIn 0.5s var(--transition-elegant) backwards;
      }

      @keyframes slideIn {
        from {
          opacity: 0;
          transform: translateY(30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      /* Stagger animation for multiple items */
      .single-item:nth-child(1) {
        animation-delay: 0.1s;
      }
      .single-item:nth-child(2) {
        animation-delay: 0.2s;
      }
      .single-item:nth-child(3) {
        animation-delay: 0.3s;
      }
      .single-item:nth-child(4) {
        animation-delay: 0.4s;
      }

      /* macOS Window Controls Decoration */
      .single-item::before {
        content: "";
        position: absolute;
        top: 1.5rem;
        left: 1.5rem;
        width: 12px;
        height: 12px;
        background: var(--window-red);
        border-radius: 50%;
        box-shadow:
          20px 0 0 var(--window-yellow),
          40px 0 0 var(--window-green);
        opacity: 0;
        transition: opacity var(--transition-smooth);
        z-index: 10;
      }

      .single-item:hover::before {
        opacity: 0.8;
      }

      .single-item:hover {
        transform: translateY(-8px) scale(1.02);
        box-shadow: var(--shadow-xl);
        border-color: var(--border-secondary);
      }

      .single-item a {
        text-decoration: none;
        color: inherit;
        display: block;
      }

      .single-item h3 {
        color: var(--text-primary);
        margin-bottom: 1rem;
        font-size: 24px;
        transition: color var(--transition-smooth);
      }

      .single-item:hover h3 {
        color: var(--accent);
        transform: translateX(4px);
      }

      .post-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border-radius: var(--border-radius-lg);
        margin-bottom: 1.5rem;
        transition: transform var(--transition-elegant);
      }

      .single-item:hover .post-image {
        transform: scale(1.05);
      }

      .post-meta {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1rem;
      }

      .post-date {
        color: var(--text-secondary);
        font-family: "IBM Plex Mono", sans-serif;
        font-size: 12px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
      }

      .post-description {
        color: var(--text-secondary);
        line-height: 24px;
        margin-bottom: 1.5rem;
      }

      .post-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
      }

      .post-tag {
        background: var(--chip-bg);
        backdrop-filter: blur(10px);
        color: var(--chip-text);
        padding: 6px 12px;
        border-radius: 20px;
        font-family: "IBM Plex Mono", sans-serif;
        font-size: 10px;
        text-transform: uppercase;
        border: 1px solid rgba(255, 255, 255, 0.05);
        transition: all var(--transition-smooth);
      }

      .post-tag:hover {
        background: var(--accent-light);
        border-color: var(--accent);
        transform: translateY(-2px);
      }

      /* Featured Post with macOS Glow */
      .featured-post {
        background: linear-gradient(
          135deg,
          rgba(252, 81, 133, 0.12),
          rgba(63, 193, 201, 0.08)
        );
        border: 1.5px solid var(--accent-secondary);
        position: relative;
        box-shadow:
          var(--shadow-lg),
          0 0 40px rgba(252, 81, 133, 0.15);
      }

      .featured-post::before {
        content: "";
        position: absolute;
        top: 1.5rem;
        left: 1.5rem;
        width: 12px;
        height: 12px;
        background: var(--window-red);
        border-radius: 50%;
        box-shadow:
          20px 0 0 var(--window-yellow),
          40px 0 0 var(--window-green);
        opacity: 1;
        z-index: 10;
      }

      .featured-post::after {
        content: "FEATURED";
        position: absolute;
        top: 1.5rem;
        right: 1.5rem;
        background: var(--accent-secondary);
        color: #ffffff;
        padding: 0.35rem 0.85rem;
        font-size: 10px;
        font-weight: 600;
        letter-spacing: 1.5px;
        border-radius: 20px;
        box-shadow: 0 4px 12px rgba(252, 81, 133, 0.35);
        animation: pulse 2s infinite;
      }

      @keyframes pulse {
        0%,
        100% {
          box-shadow: 0 4px 12px rgba(252, 81, 133, 0.35);
        }
        50% {
          box-shadow: 0 4px 20px rgba(252, 81, 133, 0.5);
        }
      }

      .featured-post .post-image {
        height: 280px;
      }

      .featured-post h3 {
        font-size: 28px;
        background: linear-gradient(
          135deg,
          var(--accent-secondary) 0%,
          var(--accent) 100%
        );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }
    </style>
  </head>
  <body>
    <div class="content">
      <Header selectedItem="blog" />
      <nav class="main">
        <div class="container">
          <div class="back-nav-container">
            <a href="/" class="back-nav-button">
              <svg class="back-nav-img" fill="currentColor" viewBox="0 0 24 24">
                <path
                  d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
                ></path>
              </svg>
              <div>Back</div>
            </a>
          </div>
          <div class="content-container">
            <h1>博客文章</h1>
            <section class="items-container">
              <div class="resource-items">
                {
                  posts.map((post, index) => (
                    <div
                      class={`single-item ${index === 0 ? "featured-post" : ""}`}
                    >
                      <a href={`/blog/${post.id}/`}>
                        {post.data.heroImage && (
                          <Image
                            class="post-image"
                            width={720}
                            height={360}
                            src={post.data.heroImage}
                            alt=""
                          />
                        )}
                        <div class="post-meta">
                          <div class="post-date">
                            <FormattedDate date={post.data.pubDate} />
                          </div>
                        </div>
                        <h3>{post.data.title}</h3>
                        <div class="post-description">
                          {post.data.description}
                        </div>
                        {post.data.tags && post.data.tags.length > 0 && (
                          <div class="post-tags">
                            {post.data.tags.map((tag) => (
                              <div class="post-tag">{tag}</div>
                            ))}
                          </div>
                        )}
                      </a>
                    </div>
                  ))
                }
              </div>
            </section>
          </div>
        </div>
      </nav>
    </div>
  </body>
</html>
